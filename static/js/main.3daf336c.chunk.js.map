{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","title","completed","id","classNames","TodoList","todos","map","username","getUser","userId","usersFromServer","find","initialTodos","App","useState","setTodos","setTitle","setUserId","titleError","setTitleError","userError","setUserError","action","method","onSubmit","event","preventDefault","trim","newTodo","Math","max","previousTodo","type","placeholder","value","onChange","target","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3daf336c.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  user && (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  )\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo: {\n    title,\n    completed,\n    user,\n    id,\n  },\n}) => (\n  <article\n    data-id={id}\n    className={classNames('TodoInfo',\n      { 'TodoInfo--completed': completed })}\n  >\n    <h2 className=\"TodoInfo__title\">{title}</h2>\n\n    <UserInfo user={user} />\n  </article>\n);\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        key={todo.id}\n        todo={todo}\n        data-id={todo.id}\n      />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  // if there is no user with a given userId\n  return foundUser || null;\n}\n\nexport const initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App:React.FC = () => {\n  const [todos, setTodos] = useState(initialTodos);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title.trim()) {\n      setTitleError(true);\n    }\n\n    if (userId === 0) {\n      setUserError(true);\n    }\n\n    if (title.trim() && userId !== 0) {\n      const newTodo: Todo = {\n        id: Math.max(...todos.map(todo => todo.id)) + 1,\n        userId,\n        title,\n        completed: false,\n        user: getUser(userId),\n      };\n\n      setTodos((previousTodo: Todo[]) => {\n        return [...previousTodo, newTodo];\n      });\n\n      setTitle('');\n      setUserId(0);\n\n      setTitleError(false);\n      setUserError(false);\n    }\n  };\n\n  const handleTitle = (\n    event: { target: { value: string; }; },\n  ) => {\n    setTitle(event.target.value.replace(/[^a-zA-Z0-9\\sU+0430-яєії]/ig, ''));\n    setTitleError(false);\n  };\n\n  const handleUserName = (event: { target: { value: string | number; }; }) => {\n    setUserId(+event.target.value);\n    setUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleTitle}\n            />\n          </label>\n\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={handleUserName}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n\n              {usersFromServer.map((user) => (\n                <option value={user.id} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {userError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}